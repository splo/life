name: Release

# When pushing a tag name starting with `v`:
# - Build archives containing the Linux, Windows and macOS compiled versions.
# - Create a GitHub release with release notes and the archives.

on:
    push:
        tags:
            - "v*"

jobs:
    linux_build:
        name: Build Linux version
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
            - uses: actions/cache@v4
              with:
                  path: |
                      ~/.cargo/bin/
                      ~/.cargo/registry/index/
                      ~/.cargo/registry/cache/
                      ~/.cargo/git/db/
                      target/
                  key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
            - name: Compile Linux version
              run: cargo build --release --verbose
            - name: Get version
              id: get_version
              run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_OUTPUT
            - name: Package Linux archive
              run: |
                  mkdir -p "./target/archive-linux-64/bin"
                  cp -v "./target/release/life" "./target/archive-linux-64/bin/"
                  cd "./target/archive-linux-64"
                  tar cvzf "life-${{ steps.get_version.outputs.VERSION }}-linux-64.tgz" *
            - name: Upload Linux archive
              uses: actions/upload-artifact@v4
              with:
                  name: linux_build
                  path: target/archive-linux-64/life-${{ steps.get_version.outputs.VERSION }}-linux-64.tgz

    windows_build:
        name: Build Windows version
        runs-on: windows-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
            - uses: actions/cache@v4
              with:
                  path: |
                      ~/.cargo/bin/
                      ~/.cargo/registry/index/
                      ~/.cargo/registry/cache/
                      ~/.cargo/git/db/
                      target/
                  key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
            - name: Compile Windows version
              run: cargo build --release --verbose
            - name: Get version
              id: get_version
              shell: bash
              run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_OUTPUT
            - name: Prepare zip
              shell: bash
              run: mkdir -p "./target/archive-windows-64"
            - name: Zip Release
              uses: TheDoctor0/zip-release@0.7.6
              with:
                  directory: target/archive-windows-64
                  filename: "life-${{ steps.get_version.outputs.VERSION }}-windows-64.zip"
                  path: ../release/life.exe
            - name: Upload Windows archive
              uses: actions/upload-artifact@v4
              with:
                  name: windows_build
                  path: target/archive-windows-64/life-${{ steps.get_version.outputs.VERSION }}-windows-64.zip

    macos_build:
        name: Build macOS version
        runs-on: macOS-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
            - uses: actions/cache@v4
              with:
                  path: |
                      ~/.cargo/bin/
                      ~/.cargo/registry/index/
                      ~/.cargo/registry/cache/
                      ~/.cargo/git/db/
                      target/
                  key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
            - name: Compile macOS Version
              run: cargo build --release --verbose
            - name: Get version
              id: get_version
              run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_OUTPUT
            - name: Package macOS Archive
              run: |
                  mkdir -p "./target/archive-macos-64/bin"
                  cp -v "./target/release/life" "./target/archive-macos-64/bin/"
                  cd "./target/archive-macos-64"
                  tar cvzf "life-${{ steps.get_version.outputs.VERSION }}-macos-64.tgz" *
            - name: Upload macOS Archive
              uses: actions/upload-artifact@v4
              with:
                  name: macos_build
                  path: target/archive-macos-64/life-${{ steps.get_version.outputs.VERSION }}-macos-64.tgz

    release:
        name: Release
        runs-on: ubuntu-latest
        needs: [linux_build, windows_build, macos_build]
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
            - name: Get version
              id: get_version
              run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_OUTPUT
            - name: Generate release notes
              run: |
                  go install github.com/git-chglog/git-chglog/cmd/git-chglog@v0.15.4
                  mkdir -p target
                  git-chglog -c .chglog/release.yml $(git describe --tags) > ./target/release_notes.md
            - name: Download Linux archive
              uses: actions/download-artifact@v4
              with:
                  name: linux_build
                  path: ./target/archive-linux-64/
            - name: Download Windows archive
              uses: actions/download-artifact@v4
              with:
                  name: windows_build
                  path: ./target/archive-windows-64/
            - name: Download macOS archive
              uses: actions/download-artifact@v4
              with:
                  name: macos_build
                  path: ./target/archive-macos-64/
            - name: Create release
              uses: softprops/action-gh-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  name: Release ${{ steps.get_version.outputs.VERSION }}
                  draft: false
                  prerelease: false
                  body_path: ./target/release_notes.md
                  files: |
                      target/archive-linux-64/life-${{ steps.get_version.outputs.VERSION }}-linux-64.tgz
                      target/archive-windows-64/life-${{ steps.get_version.outputs.VERSION }}-windows-64.zip
                      target/archive-macos-64/life-${{ steps.get_version.outputs.VERSION }}-macos-64.tgz
